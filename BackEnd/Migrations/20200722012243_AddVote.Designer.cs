// <auto-generated />
using System;
using BGMNANotebookGrab.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BGMNANotebookGrab.Migrations
{
    [DbContext(typeof(AlignmentVoteContext))]
    [Migration("20200722012243_AddVote")]
    partial class AddVote
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("BGMNANotebookGrab.Models.Nominate", b =>
                {
                    b.Property<int>("NominateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alignment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Saying")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NominateId");

                    b.ToTable("Nominate");
                });

            modelBuilder.Entity("BGMNANotebookGrab.Models.Vote", b =>
                {
                    b.Property<int>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("NominateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("VoteId");

                    b.HasIndex("NominateId");

                    b.ToTable("Vote");
                });

            modelBuilder.Entity("BGMNANotebookGrab.Models.Vote", b =>
                {
                    b.HasOne("BGMNANotebookGrab.Models.Nominate", "Nominate")
                        .WithMany()
                        .HasForeignKey("NominateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
